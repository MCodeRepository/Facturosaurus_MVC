@using Facturosaurus.Application.CompanyDetails
@using Facturosaurus.Application.CompanyDetails.Commands.CreateNewCompanyDetails
@model IEnumerable<CompanyDetailsDto>

@{
    ViewData["Title"] = "Dane firmy";
}

<h1 class="titeOfPages">Historia zmian danych firmy:</h1>


<div class="container text-center ">
    <div class="row mb-2  border border-dark rounded p-0 rowCustomer no-gutters container-header ">
        <div class="row p-0 no-gutters">
            <div class="col-sm align-content-center">
                Data aktualizacji
            </div>
            <div class="col-sm align-content-center">
                Nazwa firmy
            </div>
            <div class="col-sm align-content-center">
                NIP
            </div>
            <div class="col-sm align-content-center">
                Adres siedziby
            </div>
            <div class="col-sm align-content-center">
                Konto bankowe
            </div>
            <div class="col-sm align-content-center">
                Kontakt
            </div>
        </div>
    </div>

    @foreach(var item in Model)
    {
        var updateDate = item.UpdateDate.ToString("yyyy-MM-dd");
        var fullAddress = item.GetFullAddress();

        <div class="row mb-2 border border-dark rounded p-0 rowCustomer no-gutters">
            <div class="col-sm">
                <b>@Html.DisplayFor(modelItem => updateDate)</b>
            </div>
            <div class="col-sm">
                @Html.DisplayFor(modelItem => item.CompanyName) <br />
                @Html.DisplayFor(modelItem => item.ShortCompanyName)
            </div>
            <div class="col-sm">
                @Html.DisplayFor(modelItem => item.NipNumber)
            </div>
            <div class="col-sm">
                @Html.DisplayFor(modelItem => fullAddress)
            </div>
            <div class="col-sm">
                @Html.DisplayFor(modelItem => item.BankName) <br />
                @Html.DisplayFor(modelItem => item.Currency) @Html.DisplayFor(modelItem => item.BankAccountNumber)
            </div>
            <div class="col-sm">
                @Html.DisplayFor(modelItem => item.PhoneNumber) <br />
                @Html.DisplayFor(modelItem => item.AddressEmail)
            </div>
        </div>
    }
    
</div>

@{
    var lastCompanyDetails = Model.LastOrDefault();
    var loadCompanyDetails = lastCompanyDetails != null ? lastCompanyDetails.GetCreateNewCompanyDetailsCommand() : new CreateNewCompanyDetailsCommand();
}

<div class="m3">
    <partial name="_CreateNewCompanyDetails" model="@loadCompanyDetails" />
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}